# 1 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
# 1 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
/* Automatically generated nanopb constant definitions */
/* Generated by nanopb-0.3.9.3 at Thu Jul 25 21:38:42 2019. */

# 5 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 2

/* @@protoc_insertion_point(includes) */






const pb_field_t EventBase_fields[8] = {
    {1, 0x40 | 0x10 | 0x06, (
# 14 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   __builtin_offsetof (
# 14 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   EventBase
# 14 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   , 
# 14 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   id
# 14 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   )
# 14 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   ), 0, (sizeof ((EventBase*)0)->id), 0, 0},
    {2, 0x40 | 0x10 | 0x06, (
# 15 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   __builtin_offsetof (
# 15 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   EventBase
# 15 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   , 
# 15 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   correlationId
# 15 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   ) 
# 15 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   - 
# 15 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   __builtin_offsetof (
# 15 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   EventBase
# 15 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   , 
# 15 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   id
# 15 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   ) 
# 15 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   - (sizeof ((EventBase*)0)->id)), 0, (sizeof ((EventBase*)0)->correlationId), 0, 0},
    {3, 0x00 | 0x10 | 0x00 /* int32, int64, enum, bool */, (
# 16 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   __builtin_offsetof (
# 16 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   EventBase
# 16 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   , 
# 16 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   deviceTime
# 16 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   ) 
# 16 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   - 
# 16 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   __builtin_offsetof (
# 16 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   EventBase
# 16 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   , 
# 16 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   correlationId
# 16 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   ) 
# 16 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   - (sizeof ((EventBase*)0)->correlationId)), 0, (sizeof ((EventBase*)0)->deviceTime), 0, 0},
    {4, 0x40 | 0x10 | 0x06, (
# 17 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   __builtin_offsetof (
# 17 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   EventBase
# 17 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   , 
# 17 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   deviceId
# 17 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   ) 
# 17 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   - 
# 17 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   __builtin_offsetof (
# 17 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   EventBase
# 17 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   , 
# 17 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   deviceTime
# 17 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   ) 
# 17 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   - (sizeof ((EventBase*)0)->deviceTime)), 0, (sizeof ((EventBase*)0)->deviceId), 0, 0},
    {5, 0x00 | 0x10 | 0x00 /* int32, int64, enum, bool */, (
# 18 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   __builtin_offsetof (
# 18 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   EventBase
# 18 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   , 
# 18 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   version
# 18 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   ) 
# 18 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   - 
# 18 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   __builtin_offsetof (
# 18 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   EventBase
# 18 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   , 
# 18 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   deviceId
# 18 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   ) 
# 18 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   - (sizeof ((EventBase*)0)->deviceId)), 0, (sizeof ((EventBase*)0)->version), 0, 0},
    {6, 0x40 | 0x10 | 0x06, (
# 19 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   __builtin_offsetof (
# 19 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   EventBase
# 19 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   , 
# 19 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   commandId
# 19 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   ) 
# 19 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   - 
# 19 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   __builtin_offsetof (
# 19 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   EventBase
# 19 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   , 
# 19 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   version
# 19 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   ) 
# 19 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   - (sizeof ((EventBase*)0)->version)), 0, (sizeof ((EventBase*)0)->commandId), 0, 0},
    {7, 0x40 | 0x10 | 0x05, (
# 20 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   __builtin_offsetof (
# 20 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   EventBase
# 20 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   , 
# 20 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   payload
# 20 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   ) 
# 20 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   - 
# 20 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   __builtin_offsetof (
# 20 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   EventBase
# 20 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   , 
# 20 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   commandId
# 20 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c" 3 4
   ) 
# 20 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/EventBase.pb.c"
   - (sizeof ((EventBase*)0)->commandId)), 0, (sizeof ((EventBase*)0)->payload), 0, 0},
    {0,(pb_type_t) 0,0,0,0,0,0}
};


/* @@protoc_insertion_point(eof) */
# 1 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino"
# 2 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 2
# 3 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 2
# 4 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 2
# 5 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 2
# 6 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 2
# 7 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 2
# 8 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 2
# 9 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 2


# 12 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 2
# 13 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 2
# 14 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 2
# 15 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 2
# 16 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 2


/* DEFINES */
# 32 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino"
static bool hasWifi = false;
static bool hasIoTHub = false;


/* Global variable ****************************/
telemetry_table_t tele_tab;
telemetry_data_t t_data;

/* Initialize tickers */
Ticker lidar_send;
Ticker sensors_read;

Timer lidar_timer;

int lidar_time;

char* id_string;
char* device_id_string;
char* payload_string;
char* correlation_id_string;

/* Global functions */
void lidar_time_read(void);
void read_all_sensors(void);

/* Assign function pointers */
void (*read_sensors_ptr)(void) = &read_all_sensors;
void (*lidar_time_read_ptr)(void) = &lidar_time_read;






void setup() {
# 75 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino"
  /* Sensor intialization */
  init_onboard_sensors();
  tele_tab = telemetry_init();

  if (WiFi.begin() == WL_CONNECTED)
  {
    hasWifi = true;
    Screen.print(1, "Running...");

    if (!DevKitMQTTClient_Init())
    {
      hasIoTHub = false;
      return;
    }
    hasIoTHub = true;
  }
  else
  {
    hasWifi = false;
    Screen.print(1, "No Wi-Fi");
  }

  /* Set up iunterupts and timers */
  lidar_timer.start();
  lidar_send.attach(lidar_time_read_ptr,0.1);
  sensors_read.attach(read_sensors_ptr,5.0);
}

void loop() {
  // put your main code here, to run repeatedly:






  if (hasIoTHub && hasWifi)
      {
        uint8_t buff[1280];
        size_t msg_length;
        bool status;

        EventBase msg_telemetry = {{{
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 3 4
                                 __null
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino"
                                 }, 
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 3 4
                                 __null
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino"
                                 }, {{
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 3 4
                                 __null
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino"
                                 }, 
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 3 4
                                 __null
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino"
                                 }, 0, {{
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 3 4
                                 __null
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino"
                                 }, 
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 3 4
                                 __null
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino"
                                 }, 0, {{
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 3 4
                                 __null
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino"
                                 }, 
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 3 4
                                 __null
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino"
                                 }, {{
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 3 4
                                 __null
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino"
                                 }, 
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino" 3 4
                                 __null
# 117 "/Users/Felix/Desktop/DeteX_project/Firmware_detex/Device/device.ino"
                                 }};

        pb_callback_t id;
        pb_callback_t device_id;
        pb_callback_t payload;
        pb_callback_t correlation_id;

        strcpy(id_string,"5d2b572f3dd05300015cad67");
        strcpy(device_id_string,"ele400-equipe4");
        strcpy(payload_string,"5");
        strcpy(correlation_id_string, "anythingoes");

        id.arg = id_string;
        device_id.arg = device_id_string;
        payload.arg = payload_string;
        correlation_id.arg = correlation_id_string;

        msg_telemetry.id = id;
        msg_telemetry.deviceId = device_id;
        msg_telemetry.deviceTime = millis();
        msg_telemetry.version = 1;
        msg_telemetry.correlationId = correlation_id;
        msg_telemetry.commandId;
        msg_telemetry.payload = payload;

        pb_ostream_t stream = pb_ostream_from_buffer(buff,sizeof(buff));

        status = pb_encode(&stream, EventBase_fields, &msg_telemetry);
        msg_length = stream.bytes_written;

        // replace the following line with your data sent to Azure IoTHub
        snprintf((char*)buff, msg_length, "{\"topic\":\"iot\"}");

        if (DevKitMQTTClient_SendEvent((char*)buff))
        {
          Screen.print(1, "Sending...");
        }
        else
        {
          Screen.print(1, "Failure...");
        }
        // delay(2000);
      }

  if (tele_tab.count == 12){
    calc_average(&t_data, &tele_tab);
    /* For testing purposes */
    Serial.printf("---------- New Output ----------------\n");
    Serial.printf("Lidar timer read : %d\n", lidar_time);

    Serial.printf("%.2f Celsius\n", t_data.temperature);
    Serial.printf("%.2f %% humidity\n",t_data.humidity);
    Serial.printf("%.2f Pa\n", t_data.pressure);
    Serial.printf("Magnetic field: x %d, y %d, z %d\n", t_data.mag_field.x, t_data.mag_field.y,t_data.mag_field.z);


    tele_tab = telemetry_init();
  }

}

/********* TO PUT UN SEPERATE HEADER FILE ********************/
void lidar_time_read(void){
  lidar_time = lidar_timer.read_ms();
  lidar_timer.reset();
}

void read_all_sensors(void){
  Serial.printf("Lidar timer read : %d\n", lidar_time);
  read_sensors(&tele_tab);
}
